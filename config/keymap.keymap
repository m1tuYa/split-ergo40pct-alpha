#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        ht_boot_reset: ht_boot_reset {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_BOOT_RESET";
            bindings = <&bootloader>, <&sys_reset>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
        };

        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        defolt_layer {
            bindings = <
&kp ESC   &kp Q      &kp W                 &kp E                      &kp R               &kp T  &bt BT_SEL 0  &mo 5             &msc MOVE_Y(-20)  &kp Y        &kp U                       &kp I       &kp O         &kp P
&kp TAB   &kp A      &kp S                 &kp D                      &kp F               &kp G  &bt BT_SEL 1  &mkp MB1          &msc MOVE_Y(20)   &kp H        &kp J                       &kp K       &kp L         &kp ENTER
&kp LGUI  &kp Z      &kp X                 &kp C                      &kp V               &kp B                                  &to 1             &kp N        &kp M                       &kp COMMA   &kp DOT       &kp MINUS
&kp LALT  &kp LCTRL  &kp LG(LS(NUMBER_4))  &mt LEFT_SHIFT LANGUAGE_2  &mt LEFT_GUI SPACE  &to 0  &to 1         &kp RC(UP_ARROW)  &kp BACKSPACE     &lt 2 ENTER  &mt RIGHT_SHIFT LANGUAGE_1  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &mo 5             &msc MOVE_Y(-20)  &mkp MB2           &kp UP_ARROW     &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &to 2   &mkp MB1          &msc MOVE_Y(20)   &kp LEFT_ARROW     &kp DOWN_ARROW   &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                            &msc MOVE_X(-20)  &msc MOVE_X(20)    &msc MOVE_X(20)  &msc MOVE_X(15)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &to 0   &to 1   &kp RC(UP_ARROW)  &to 0             &kp RIGHT_CONTROL  &trans           &trans           &trans  &trans
            >;
        };

        symbol_layer {
            bindings = <
&trans  &kp N1     &kp N2    &kp N3    &kp N4    &kp N5    &trans  &none     &kp N6     &kp N7  &kp N8    &kp N9  &kp N0     &trans
&trans  &kp GRAVE  &kp FSLH  &kp BSLH  &kp LBKT  &kp RBKT  &to 2   &none     &none      &kp N4  &kp N5    &kp N6  &kp PLUS   &kp MINUS
&trans  &kp APOS   &kp SEMI  &trans    &trans    &trans                      &none      &kp N1  &kp N2    &kp N3  &kp EQUAL  &kp FSLH
&trans  &trans     &trans    &trans    &none     &to 0     &to 1   &kp BSPC  &kp ENTER  &to 0   &kp RGUI  &trans  &trans     &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &none  &none   &kp F6  &kp F7  &kp F8  &kp F9  &kp F12  &trans
&trans  &none   &none   &none   &none   &none   &to 2  &none   &none   &kp F4  &kp F5  &kp F6  &kp F11  &none
&trans  &none   &none   &none   &none   &none                  &none   &kp F1  &kp F2  &kp F3  &kp F10  &trans
&none   &none   &none   &trans  &trans  &to 0   &to 1  &trans  &trans  &trans  &trans  &none   &none    &none
            >;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_PRV  &bt BT_CLR  &bt BT_CLR_ALL  &none   &none   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9
&none   &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_NXT  &none       &none           &none   &none   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6
&none   &none          &none          &none          &none          &none                                  &none           &none   &none   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3
&none   &none          &none          &trans         &trans         &to 0          &to 1       &trans      &trans          &trans  &trans  &kp KP_NUMBER_0  &kp KP_DOT       &mt DELETE BACKSPACE
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &to 0   &to 1   &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&mouse_scrl SCRL_DOWN SCRL_UP>,
                <&mouse_scrl SCRL_UP SCRL_DOWN>;
        };
    };
};
